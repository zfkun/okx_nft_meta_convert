name: Release

on:
  push:
    tags:
      - 'v*' # 触发条件：推送v开头的tag

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: windows
            arch: amd64
            ext: .exe
          - platform: linux
            arch: amd64
            ext: ""
          - platform: darwin
            arch: amd64
            ext: ""
          - platform: darwin
            arch: arm64
            ext: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整git历史

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24' # 指定您的Go版本

      - name: Get version
        id: version
        run: |
          echo "VERSION=$(cat build.go | grep BuildVersion | grep -v "Apache" | awk -F '=' '{print $2}' | awk -F '"' '{print $2}')" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            make build-${{ matrix.platform }}  # amd64 不带后缀
          else
            make build-${{ matrix.platform }}-${{ matrix.arch }}  # arm64 带后缀
          fi
          ls -al ./bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: okx-nft-metadata-convert-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./bin/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          echo "VERSION=$(cat build.go | grep BuildVersion | grep -v "Apache" | awk -F '=' '{print $2}' | awk -F '"' '{print $2}')" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bin

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: v${{ steps.version.outputs.VERSION }}
          body: |
            ### Release Notes
            Auto-generated release for version ${{ steps.version.outputs.VERSION }}
            
            **Build Info**
            - Go Version: $(go version)
            - Build Time: $(date)
          files: |
            bin/**/*